#!/bin/bash

# Variables
ACCESS_TOKEN="<your_access_token>"  # Replace with your GitLab personal access token
GROUP_ID="<group_id>"              # Replace with your GitLab group ID or path
BASE_URL="https://gitlab.com/api/v4"

# Get Jira ticket number as input from the user
read -p "Enter the Jira ticket number to search (e.g., ABC-123): " JIRA_TICKET

if [[ -z "$JIRA_TICKET" ]]; then
  echo "Error: Jira ticket number cannot be empty."
  exit 1
fi

# Fetch all projects under the group
echo "Fetching all projects under group ID: $GROUP_ID..."
PROJECT_IDS=$(curl -s --header "PRIVATE-TOKEN: $ACCESS_TOKEN" "$BASE_URL/groups/$GROUP_ID/projects?per_page=100" | jq '.[].id')

# Check if projects exist
if [[ -z "$PROJECT_IDS" ]]; then
  echo "Error: No projects found under the specified group."
  exit 1
fi

# Initialize a variable to track projects with the Jira ticket
MATCHING_PROJECTS=()

# Iterate over each project
for PROJECT_ID in $PROJECT_IDS; do
  # Remove quotes from project ID
  PROJECT_ID=$(echo "$PROJECT_ID" | tr -d '"')

  # Fetch commits for the project
  echo "Checking commits in Project ID: $PROJECT_ID..."
  PAGE=1
  FOUND=false
  while true; do
    COMMITS=$(curl -s --header "PRIVATE-TOKEN: $ACCESS_TOKEN" "$BASE_URL/projects/$PROJECT_ID/repository/commits?per_page=100&page=$PAGE")

    # Break if no more commits
    if [[ $(echo "$COMMITS" | jq length) -eq 0 ]]; then
      break
    fi

    # Check for the Jira ticket in commit messages
    if echo "$COMMITS" | jq -r '.[].message' | grep -q "$JIRA_TICKET"; then
      echo "  Found Jira ticket $JIRA_TICKET in Project ID: $PROJECT_ID"
      MATCHING_PROJECTS+=("$PROJECT_ID")
      FOUND=true
      break
    fi

    PAGE=$((PAGE + 1))
  done

  if $FOUND; then
    continue
  fi
done

# Display results
if [[ ${#MATCHING_PROJECTS[@]} -eq 0 ]]; then
  echo "No projects found with Jira ticket $JIRA_TICKET."
else
  echo "Projects with Jira ticket $JIRA_TICKET:"
  for PROJECT in "${MATCHING_PROJECTS[@]}"; do
    echo "  Project ID: $PROJECT"
  done
fi
